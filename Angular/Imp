Key concepts of angular
1. Components (Component Life Cycle Hooks)
2. Component interaction
3. Pipes- inbuilt and custom pipes
4. Services
5. Directives- inbuilt and custom (Attribute and Structural Directives)
6. Routing
7. Dependency Injection and how it is achieved in angular.
8. Modules
9. Rxjs
10. Ngrx (state management)
11. Content projection
12. AOT vs JIT
13. Change detection
14. Detecting Change to @Input Binding
15. Example Child and Parent Components
16. Using a Custom Setter
17. Using ngOnChanges
18. Advanced Inter Component Communication
19. Direct Access to Child
20. Module/Library Architecture / Modular Angular Architecture
21. One-way Dataflow and Immutability
22. Http and Observable Services
23. Template Binding
24. Route Guards, Pre-loads, Lazy-loading
25. @viewChild and @ContentChild Decorators
26. Dynamic Components and ng-template
27. @Host @Hostbinding and exportAs
28. State Management with RxJs
29. Dependency Injection and Zones


Angular Rxjs 

https://www.youtube.com/watch?v=qt8bB84PnQs&list=PLp50dWW_m40VPvdJ7ph1CU8xnQkppnSAE
https://www.youtube.com/watch?v=4KBVkQ7b6yk&pp=ygUbYW5ndWxhciBpbnRlcnZpZXcgcXVlc3Rpb25z
https://www.youtube.com/watch?v=nRS40TPb358&pp=ygUbYW5ndWxhciBpbnRlcnZpZXcgcXVlc3Rpb25z
https://www.youtube.com/watch?v=L9EXIhabTMs&t=86s&pp=ygUbYW5ndWxhciBpbnRlcnZpZXcgcXVlc3Rpb25z
https://www.youtube.com/watch?v=PevqeI-Hxzs&t=26s
https://www.youtube.com/watch?v=IAL9qr6Yxmc&t=16s
https://www.youtube.com/watch?v=ehaT1KFp0_Y&t=4s
https://www.youtube.com/watch?v=8cUwGfTVBYM&t=3s
https://www.youtube.com/watch?v=-jeoyDJDsSM&list=RDQMagme4SeOlzs&start_radio=1
https://www.youtube.com/watch?v=4UgronUwjsU&t=5s&pp=ygUbYW5ndWxhciBpbnRlcnZpZXcgcXVlc3Rpb25z
https://www.youtube.com/watch?v=KNmtXLOnwy8&t=184s
https://www.youtube.com/watch?v=yt1CigcLlz8
https://www.youtube.com/watch?v=GfDlxfzHi6k&t=1s
https://www.youtube.com/watch?v=bH5jGwQzbjA
https://www.youtube.com/watch?v=MSAiCicJWQA&t=10s
https://www.youtube.com/watch?v=bwRfGlpd1vo&t=9s
https://www.youtube.com/watch?v=V7Qjq6e66qk&t=2s
https://www.youtube.com/watch?v=rKckYOT_JJs&t=8s
https://www.youtube.com/watch?v=uJ-TDU189C4&t=4s&pp=ygUbYW5ndWxhciBpbnRlcnZpZXcgcXVlc3Rpb25z
https://www.youtube.com/watch?v=9cB4FVu7Yew&t=166s
https://www.youtube.com/watch?v=zddN_4mudnw&t=18s&pp=ygUbYW5ndWxhciBpbnRlcnZpZXcgcXVlc3Rpb25z


https://www.youtube.com/watch?v=eUYigtm3Sdc
https://www.youtube.com/watch?v=nrEbLLmVBrc
https://www.youtube.com/watch?v=wwALXMU2hjg
https://www.youtube.com/watch?v=NwgZ4R7HJIw&list=PLLhsXdvz0qjI68a8tLUUMyXmNhl608mcn
https://www.youtube.com/watch?v=thpVLhPePLA

https://www.infragistics.com/community/blogs/b/infragistics/posts/what-is-angular-change-detection
https://angular.io/guide/change-detection
https://blog.angular-university.io/how-does-angular-2-change-detection-really-work/
https://www.cleveroad.com/blog/angular-vs-react/
https://radixweb.com/blog/react-vs-angular


https://www.simplilearn.com/tutorials/angular-tutorial/what-is-angular
https://matcha.fyi/things-to-learn-angular/

https://www.webagesolutions.com/advanced-components-concepts-in-angular
https://blog.bitsrc.io/6-concepts-to-master-to-be-an-angular-architect-807314e31ef3
https://www.webagesolutions.com/advanced-components-concepts-in-angular


https://www.simplilearn.com/tutorials/angular-tutorial/angular-interview-questions
https://intellipaat.com/blog/interview-question/angular-interview-questions/
https://flexiple.com/angular/interview-questions/
https://www.javatpoint.com/top-angular-interview-questions
https://www.edureka.co/blog/interview-questions/top-angularjs-interview-questions/
https://hackr.io/blog/angular-interview-questions
https://www.interviewbit.com/angularjs-interview-questions/
https://www.interviewkickstart.com/interview-questions/angular-interview-questions-developers
https://www.testgorilla.com/blog/angular-interview-questions/?utm_term=&utm_campaign=Campaign+%7C+Dynamic+%7C+IN+%26+PK&utm_source=google&utm_medium=cpc&hsa_acc=4932434860&hsa_cam=13796886697&hsa_grp=128153431327&hsa_ad=531855132414&hsa_src=g&hsa_tgt=aud-922641844703:dsa-19959388920&hsa_kw=&hsa_mt=&hsa_net=adwords&hsa_ver=3&gclid=CjwKCAjw586hBhBrEiwAQYEnHV_fHvaJfm1cF9ATcIp22zI5XTyJtJTwlkKtZbEUw_9wOqoyIhtf_BoCGLYQAvD_BwE
https://www.fullstack.cafe/interview-questions/angular
https://www.fullstack.cafe/blog/angular-8-interview-questions
https://in.indeed.com/career-advice/interviewing/angular-interview-questions-and-answers
https://www.interviewbit.com/angular-8-interview-questions/
https://www.dotnettricks.com/learn/angular/top-20-angular-interview-questions-and-answers
https://javarevisited.blogspot.com/2021/10/top-20-angular-interview-questions-answers.html#axzz7yUPxHNfC
https://www.odinschool.com/blog/programming/top-30-interview-questions-and-answers-on-angular-5
https://www.devteam.space/hiring-interview-tips/angular-interview-questions-and-answers/
https://www.naukri.com/blog/angularjs-interview-questions/
https://www.onlineinterviewquestions.com/angular-5-interview-questions/
https://www.turing.com/interview-questions/angular
https://www.knowledgehut.com/interview-questions/angular-interview-questions
https://www.interviewkickstart.com/interview-questions/angular-interview-questions
https://www.interviewbit.com/angular-interview-questions/


some advanced topics in Angular:

Angular CLI: Angular Command Line Interface (CLI) is a powerful tool that provides a wide range of features to streamline the development process, including scaffolding, building, testing, and deployment.

Reactive Programming: Reactive programming is a powerful programming paradigm that allows developers to build more responsive, scalable, and resilient applications. Angular provides built-in support for reactive programming using RxJS.

Lazy Loading: Lazy loading is a technique used to improve the performance of an Angular application by loading only the required modules and components on demand, rather than loading the entire application at once.

Server-Side Rendering (SSR): Server-side rendering is a technique used to improve the performance and SEO of an Angular application by rendering the HTML on the server-side and sending it to the client, rather than relying on the client to render the page.

NgRx: NgRx is a state management library for Angular applications that provides a predictable state container pattern, inspired by Redux. It helps manage the state of the application in a centralized way, making it easier to build complex applications.

Angular Universal: Angular Universal is a framework for server-side rendering Angular applications. It provides a set of tools and libraries to make it easier to build applications that can be rendered on both the client and server.

Custom Directives: Directives are a powerful feature in Angular that allows developers to extend HTML with custom attributes and tags. Custom directives can be used to create reusable components and to add custom behavior to existing components.

Advanced Forms: Angular provides a powerful and flexible forms module that allows developers to create complex forms with ease. Advanced topics include dynamic forms, form validation, form arrays, and custom form controls.

Angular Animation: Angular provides a powerful animation module that allows developers to add animations to their applications using a declarative syntax.

Performance Optimization: Angular provides several features to optimize the performance of an application, including Ahead-of-Time (AOT) compilation, Tree shaking, and Change Detection Strategies. These features help to reduce the size of the application and improve the rendering speed.


Angular JS
1. Flow of control between View and controller
2. Routing
3. Directives, Factory and Service
4. Scope and RootScope
5. Controllers
6. Expressions
7. Digest cycle


https://techoswag007.blogspot.com/2023/04/what-is-resolver-in-angular-with.html?m=1