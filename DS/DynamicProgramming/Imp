1. Identification 

- Choice 
- Optimal 

Identify the Overlap sub-problem if recursion has 2 called 

Recursive ---> Memorize ---> Top-Down approach 

Types of problem:
1. 0-1 Knapsack (6)
2. Unbounded Knapsack (5)
3. Fibonacci (7)
4. Longest Common Subsequence (LCS) (15)
5. Longest Increasing Subsequence (LIS) (10)
6. Kadane's Algorithm (6)
7. Matrix chain multiplication (7)***
8. DP on Tree(4)
9. DP on Grid (14)
10. Others (5)


0-1 Knapsack (6)
1. Subset sum 
2. Equal sum partition 
3. Count of subset sum 
4. Minimum subset sum difference 
5. Target sum 
6. No of subset of given difference 

Knapsack
- Fractional Knapsack (greedy)
- 0/1
- Unbounded Knapsack

                    I1      I2      I3      I4
weight arr  wt[]    1        3       4       4
value arr   val[]   1        4       5       7

W (capacity) Max Weight 7

Select the item in such a way that you can have maximize your profit with in limit of 7kg of bag

Unbounded Knapsack (5)
- Rod cutting
- Coin change
- Coin change II
- Maximum Ribbon cut 


